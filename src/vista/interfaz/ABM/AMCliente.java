/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.interfaz.ABM;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import vista.CONTROLADOR_V;
import vista.recursos.Validacion;

/**
 *
 * @author vicente-dell
 */
public class AMCliente extends javax.swing.JDialog {

    private String opcion;

    public AMCliente(java.awt.Frame parent, boolean modal, String opcion) {
        super(parent, modal);
        initComponents();
        this.opcion = opcion;
        this.setLocationRelativeTo(parent);
        CONTROLADOR_V.recuperarTipoRS(this.listaRazonSocial);
        CONTROLADOR_V.recuperarPais(this.listaPais);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        etCalle = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        etNum = new javax.swing.JLabel();
        txtNumCalle = new javax.swing.JTextField();
        txtDep = new javax.swing.JTextField();
        etDep = new javax.swing.JLabel();
        txtPiso = new javax.swing.JTextField();
        etPiso = new javax.swing.JLabel();
        listaCP = new javax.swing.JComboBox();
        listaLocal = new javax.swing.JComboBox();
        listaProvincia = new javax.swing.JComboBox();
        listaPais = new javax.swing.JComboBox();
        btnAgregarPais = new javax.swing.JButton();
        btnAgregarProv = new javax.swing.JButton();
        btnAgregarLoc = new javax.swing.JButton();
        btnAgregarCP = new javax.swing.JButton();
        txtCodArea = new javax.swing.JTextField();
        txtNumTel = new javax.swing.JTextField();
        txtPreCuit = new javax.swing.JTextField();
        txtNumCuit = new javax.swing.JTextField();
        txtPosCuit = new javax.swing.JTextField();
        txtRazonSocial = new javax.swing.JTextField();
        listaRazonSocial = new javax.swing.JComboBox();
        btnCerrar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta de Cliente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Razon Social:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CUIT:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Telefono:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Pais:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Provincia:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Localidad:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Codigo Postal:");

        etCalle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etCalle.setText("Calle:");

        txtCalle.setEnabled(false);

        etNum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etNum.setText("Numero:");

        txtNumCalle.setEnabled(false);

        txtDep.setEnabled(false);

        etDep.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etDep.setText("Departamento:");

        txtPiso.setEnabled(false);

        etPiso.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etPiso.setText("Piso:");

        listaCP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un Codigo Postal" }));
        listaCP.setEnabled(false);
        listaCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCPActionPerformed(evt);
            }
        });

        listaLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una Localidad" }));
        listaLocal.setEnabled(false);
        listaLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaLocalActionPerformed(evt);
            }
        });

        listaProvincia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una Provincia" }));
        listaProvincia.setEnabled(false);
        listaProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaProvinciaActionPerformed(evt);
            }
        });

        listaPais.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un Pais" }));
        listaPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaPaisActionPerformed(evt);
            }
        });

        btnAgregarPais.setText("Agregar");
        btnAgregarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPaisActionPerformed(evt);
            }
        });

        btnAgregarProv.setText("Agregar");
        btnAgregarProv.setEnabled(false);
        btnAgregarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProvActionPerformed(evt);
            }
        });

        btnAgregarLoc.setText("Agregar");
        btnAgregarLoc.setEnabled(false);
        btnAgregarLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLocActionPerformed(evt);
            }
        });

        btnAgregarCP.setText("Agregar");
        btnAgregarCP.setEnabled(false);
        btnAgregarCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCPActionPerformed(evt);
            }
        });

        txtCodArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodAreaKeyTyped(evt);
            }
        });

        txtNumTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumTelKeyTyped(evt);
            }
        });

        txtPreCuit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPreCuitKeyTyped(evt);
            }
        });

        txtNumCuit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumCuitKeyTyped(evt);
            }
        });

        txtPosCuit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPosCuitKeyTyped(evt);
            }
        });

        listaRazonSocial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opcion" }));

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imagen/Cancel.png"))); // NOI18N
        btnCerrar.setToolTipText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imagen/Save.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etCalle)
                            .addComponent(etPiso))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(etNum)
                                .addGap(18, 18, 18)
                                .addComponent(txtNumCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(etDep)
                                .addGap(18, 18, 18)
                                .addComponent(txtDep, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listaRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPreCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPosCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(listaPais, 0, 287, Short.MAX_VALUE)
                                            .addComponent(listaProvincia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(listaCP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(listaLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregarPais)
                                    .addComponent(btnAgregarProv)
                                    .addComponent(btnAgregarLoc)
                                    .addComponent(btnAgregarCP)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodArea, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumTel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPreCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPosCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(listaPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarPais))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(listaProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarProv))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(listaLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarLoc))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(listaCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarCP))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etCalle)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etNum)
                    .addComponent(txtNumCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etDep)
                    .addComponent(etPiso)
                    .addComponent(txtPiso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(btnGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JComboBox getListaCP() {
        return listaCP;
    }

    public JComboBox getListaLocal() {
        return listaLocal;
    }

    public JComboBox getListaPais() {
        return listaPais;
    }

    public JComboBox getListaProvincia() {
        return listaProvincia;
    }

    public JComboBox getListaRazonSocial() {
        return listaRazonSocial;
    }

    public JTextField getTxtCalle() {
        return txtCalle;
    }

    public JTextField getTxtCodArea() {
        return txtCodArea;
    }

    public JTextField getTxtDep() {
        return txtDep;
    }

    public JTextField getTxtNumCalle() {
        return txtNumCalle;
    }

    public JTextField getTxtNumCuit() {
        return txtNumCuit;
    }

    public JTextField getTxtNumTel() {
        return txtNumTel;
    }

    public JTextField getTxtPiso() {
        return txtPiso;
    }

    public JTextField getTxtPosCuit() {
        return txtPosCuit;
    }

    public JTextField getTxtPreCuit() {
        return txtPreCuit;
    }

    public JTextField getTxtRazonSocial() {
        return txtRazonSocial;
    }

    private void listaCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCPActionPerformed
        String cp = (String) this.listaCP.getSelectedItem();
        if (!cp.equals("Seleccione un Codigo Postal")) {
            this.txtCalle.setEnabled(true);
            this.txtNumCalle.setEnabled(true);
            this.txtPiso.setEnabled(true);
            this.txtDep.setEnabled(true);
        } else {
            reiniciarComponentes("cp");
        }
    }//GEN-LAST:event_listaCPActionPerformed

    private void listaLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaLocalActionPerformed
        String loc = (String) this.listaLocal.getSelectedItem();
        if (!loc.equals("Seleccione una Localidad")) {
            ArrayList<String> listCP = CONTROLADOR_V.recuperarCP(loc);
            this.listaCP.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione un Codigo Postal"}));
            for (String cp : listCP) {
                this.listaCP.addItem(cp);
            }
            this.listaCP.setEnabled(true);
            this.btnAgregarCP.setEnabled(true);
        } else {
            reiniciarComponentes("localidad");
        }
    }//GEN-LAST:event_listaLocalActionPerformed

    private void listaProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaProvinciaActionPerformed
        String prov = (String) this.listaProvincia.getSelectedItem();
        if (!prov.equals("Seleccione una Provincia")) {
            ArrayList<String> listaLocalidad = CONTROLADOR_V.recuperarLocalidad(prov);
            this.listaLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione una Localidad"}));
            for (String localidad : listaLocalidad) {
                this.listaLocal.addItem(localidad);
            }
            this.listaLocal.setEnabled(true);
            this.btnAgregarLoc.setEnabled(true);
        } else {
            reiniciarComponentes("provincia");
        }
    }//GEN-LAST:event_listaProvinciaActionPerformed

    private void listaPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaPaisActionPerformed
        String pais = (String) this.listaPais.getSelectedItem();
        if (!pais.equals("Seleccione un Pais")) {
            ArrayList<String> listProvincia = CONTROLADOR_V.recuperarProvincia(pais);
            this.listaProvincia.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione una Provincia"}));
            for (String provincia : listProvincia) {
                this.listaProvincia.addItem(provincia);
            }
            this.listaProvincia.setEnabled(true);
            this.btnAgregarProv.setEnabled(true);

        } else {
            reiniciarComponentes("pais");
        }
    }//GEN-LAST:event_listaPaisActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        formWindowClosing(null);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String rs = (String) this.listaRazonSocial.getSelectedItem();
        if (!rs.equals("Seleccione una opcion")) {
            if (!this.txtRazonSocial.getText().equals("")) {
                if (!this.txtPreCuit.getText().equals("") && this.txtPreCuit.getText().length() == 2) {
                    if (!this.txtNumCuit.getText().equals("") && this.txtNumCuit.getText().length() == 8) {
                        if (!this.txtPosCuit.getText().equals("") && this.txtPosCuit.getText().length() == 1) {
                            if (Validacion.validarNumero(this.txtPreCuit.getText() + this.txtNumCuit.getText() + this.txtPosCuit.getText())) {
                                if (Validacion.validarNumero(this.txtCodArea.getText()) && this.txtCodArea.getText().length() <= 4 && !this.txtCodArea.getText().startsWith("0")) {
                                    if (Validacion.validarNumero(this.txtNumTel.getText()) && this.txtNumTel.getText().length() <= 7 && !this.txtNumTel.getText().startsWith("0")) {
                                        String pais = (String) this.listaPais.getSelectedItem();
                                        if (!pais.equals("Seleccione un Pais")) {
                                            String provincia = (String) this.listaProvincia.getSelectedItem();
                                            if (!provincia.equals("Seleccione una Provincia")) {
                                                String localidad = (String) this.listaLocal.getSelectedItem();
                                                if (!localidad.equals("Seleccione una Localidad")) {
                                                    String cp = (String) this.listaCP.getSelectedItem();
                                                    if (!cp.equals("Seleccione un Codigo Postal")) {
                                                        if (!this.txtCalle.getText().equals("")) {
                                                            if (!this.txtNumCalle.getText().equals("") && Validacion.validarNumero(this.txtNumCalle.getText())) {
                                                                String domicilio = "Calle: " + this.txtCalle.getText().toUpperCase() + " %Nro: " + this.txtNumCalle.getText().toUpperCase() + " Piso: " + this.txtPiso.getText().toUpperCase() + " Dpto: " + this.txtDep.getText().toUpperCase();
                                                                String telefono = this.txtCodArea.getText() + "-" + this.txtNumTel.getText();
                                                                String cuit = this.txtPreCuit.getText() + "-" + this.txtNumCuit.getText() + "-" + this.txtPosCuit.getText();
                                                                switch (this.opcion) {
                                                                    case "Alta":
                                                                        if (CONTROLADOR_V.altaCliente(cuit, this.txtRazonSocial.getText().toUpperCase(), rs, telefono, domicilio, pais, provincia, localidad, Integer.parseInt((String) this.listaCP.getSelectedItem()))) {
                                                                            JOptionPane.showMessageDialog(this, "Se dio el alta satisfactoriamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                                                                            CONTROLADOR_V.mensaje("Se dio el alta satisfactoriamente");
                                                                            this.btnCerrarActionPerformed(evt);
                                                                        } else {
                                                                            JOptionPane.showMessageDialog(this, "No se logro dar el alta", "ERROR", JOptionPane.ERROR_MESSAGE);
                                                                            CONTROLADOR_V.mensaje("No se logro dar el alta");
                                                                        }
                                                                        break;
                                                                    case "Modificar":
                                                                        if (CONTROLADOR_V.modificarCliente(cuit, this.txtRazonSocial.getText().toUpperCase(), rs, telefono, domicilio, pais, provincia, localidad, Integer.parseInt((String) this.listaCP.getSelectedItem()))) {
                                                                            JOptionPane.showMessageDialog(this, "Se modifico satisfactoriamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                                                                            CONTROLADOR_V.mensaje("Se modifico satisfactoriamente");
                                                                            this.btnCerrarActionPerformed(evt);
                                                                        } else {
                                                                            JOptionPane.showMessageDialog(this, "No se logro modificar", "ERROR", JOptionPane.ERROR_MESSAGE);
                                                                            CONTROLADOR_V.mensaje("No se logro modificar");
                                                                        }
                                                                        break;
                                                                }
                                                            } else {
                                                                JOptionPane.showMessageDialog(this, "Verifique los datos ingresados en el campo señalado.", "Error", JOptionPane.ERROR_MESSAGE);
                                                                this.txtNumCalle.selectAll();
                                                                this.txtNumCalle.requestFocus();
                                                            }
                                                        } else {
                                                            JOptionPane.showMessageDialog(this, "Verifique los datos ingresados en el campo señalado.", "Error", JOptionPane.ERROR_MESSAGE);
                                                            this.txtCalle.selectAll();
                                                            this.txtCalle.requestFocus();
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog(this, "Selecciones un Codigo Postal.", "Error", JOptionPane.ERROR_MESSAGE);
                                                        this.listaCP.requestFocus();
                                                    }
                                                } else {
                                                    JOptionPane.showMessageDialog(this, "Selecciones una Localidad.", "Error", JOptionPane.ERROR_MESSAGE);
                                                    this.listaLocal.requestFocus();
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Selecciones una Provincia.", "Error", JOptionPane.ERROR_MESSAGE);
                                                this.listaProvincia.requestFocus();
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(this, "Selecciones un Pais.", "Error", JOptionPane.ERROR_MESSAGE);
                                            this.listaPais.requestFocus();
                                        }

                                    } else {
                                        JOptionPane.showMessageDialog(this, "Verifique los datos ingresados en el campo señalado.\n"
                                                + "No debe ser mayor a 7 números y no debe comenzar con 0", "Error", JOptionPane.ERROR_MESSAGE);
                                        this.txtNumTel.requestFocus();
                                        this.txtNumTel.selectAll();
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Verifique los datos ingresados en el campo señalado.\n"
                                            + "No debe ser mayor a 4 números y no debe comenzar con 0", "Error", JOptionPane.ERROR_MESSAGE);
                                    this.txtCodArea.requestFocus();
                                    this.txtCodArea.selectAll();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Debe ingresar números en el CUIT", "ERROR", JOptionPane.ERROR_MESSAGE);
                                this.txtNumCuit.requestFocus();
                                this.txtNumCuit.selectAll();
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "ERROR", JOptionPane.ERROR_MESSAGE);
                            this.txtPosCuit.requestFocus();
                            this.txtPosCuit.selectAll();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "ERROR", JOptionPane.ERROR_MESSAGE);
                        this.txtNumCuit.requestFocus();
                        this.txtNumCuit.selectAll();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "ERROR", JOptionPane.ERROR_MESSAGE);
                    this.txtPreCuit.requestFocus();
                    this.txtPreCuit.selectAll();
                }
            } else {
                JOptionPane.showMessageDialog(this, "No puede estar vacio", "ERROR", JOptionPane.ERROR_MESSAGE);
                this.txtRazonSocial.requestFocus();
                this.txtRazonSocial.selectAll();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar alguna razon social", "ERROR", JOptionPane.ERROR_MESSAGE);
            this.listaRazonSocial.requestFocus();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int op = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la ventana de Cliente?.\n"
                + "Perdera los datos cargados", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtPreCuitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPreCuitKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)
                && txtPreCuit.getText().length() <= 1) {
        } else {
            if (c == java.awt.event.KeyEvent.VK_SPACE || txtPreCuit.getText().length() > 1) {
                getToolkit().beep();
                evt.consume();
            } else {
                if (c == java.awt.event.KeyEvent.VK_BACK_SPACE && !txtPreCuit.getText().equals("")) {
                } else {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_txtPreCuitKeyTyped

    private void txtNumCuitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumCuitKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)
                && txtNumCuit.getText().length() <= 7) {
        } else {
            if (c == java.awt.event.KeyEvent.VK_SPACE || txtNumCuit.getText().length() > 7) {
                getToolkit().beep();
                evt.consume();
            } else {
                if (c == java.awt.event.KeyEvent.VK_BACK_SPACE && !txtPreCuit.getText().equals("")) {
                } else {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_txtNumCuitKeyTyped

    private void txtPosCuitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPosCuitKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)
                && txtPosCuit.getText().length() <= 0) {
        } else {
            if (c == java.awt.event.KeyEvent.VK_SPACE || txtPosCuit.getText().length() > 0) {
                getToolkit().beep();
                evt.consume();
            } else {
                if (c == java.awt.event.KeyEvent.VK_BACK_SPACE && !txtPosCuit.getText().equals("")) {
                } else {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_txtPosCuitKeyTyped

    private void txtCodAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodAreaKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)
                && txtCodArea.getText().length() <= 2) {
        } else {
            if (c == java.awt.event.KeyEvent.VK_SPACE || txtCodArea.getText().length() > 2) {
                getToolkit().beep();
                evt.consume();
            } else {
                if (c == java.awt.event.KeyEvent.VK_BACK_SPACE && !txtCodArea.getText().equals("")) {
                } else {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_txtCodAreaKeyTyped

    private void txtNumTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumTelKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)
                && txtNumTel.getText().length() <= 6) {
        } else {
            if (c == java.awt.event.KeyEvent.VK_SPACE || txtNumTel.getText().length() > 6) {
                getToolkit().beep();
                evt.consume();
            } else {
                if (c == java.awt.event.KeyEvent.VK_BACK_SPACE && !txtNumTel.getText().equals("")) {
                } else {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_txtNumTelKeyTyped

    private void btnAgregarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPaisActionPerformed
        try {
            String pais = JOptionPane.showInputDialog(this, "Ingrese el Pais");
            pais = pais.toUpperCase();
            if (!pais.equals("")) {
                CONTROLADOR_V.altaPais(pais);
                reiniciarComponentes("pais");
                this.listaPais.setSelectedItem(pais);
            } else {
                JOptionPane.showMessageDialog(this, "El campo esta vacio", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAgregarPaisActionPerformed

    private void btnAgregarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProvActionPerformed
        try {
            String provincia = JOptionPane.showInputDialog(this, "Ingrese la Provincia");
            provincia = provincia.toUpperCase();
            if (!provincia.equals("")) {
                String pais = (String) this.listaPais.getSelectedItem();
                CONTROLADOR_V.altaProvincia(provincia, pais);
                reiniciarComponentes("pais");
                this.listaPais.setSelectedItem(pais);
                this.listaProvincia.setSelectedItem(provincia);
            } else {
                JOptionPane.showMessageDialog(this, "El campo esta vacio", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAgregarProvActionPerformed

    private void btnAgregarLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLocActionPerformed
        try {
            String localidad = JOptionPane.showInputDialog(this, "Ingrese la Localidad");
            localidad = localidad.toUpperCase();
            if (!localidad.equals("")) {
                String pais = (String) this.listaPais.getSelectedItem();
                String provincia = (String) this.listaProvincia.getSelectedItem();
                CONTROLADOR_V.altaLocalidad(localidad, provincia);
                reiniciarComponentes("pais");
                this.listaPais.setSelectedItem(pais);
                this.listaProvincia.setSelectedItem(provincia);
                this.listaLocal.setSelectedItem(localidad);
            } else {
                JOptionPane.showMessageDialog(this, "El campo esta vacio", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAgregarLocActionPerformed

    private void btnAgregarCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCPActionPerformed
        try {
            String sCp = JOptionPane.showInputDialog(this, "Ingrese el Codigo Postal");
            Integer cp = Integer.parseInt(sCp);
            String pais = (String) this.listaPais.getSelectedItem();
            String provincia = (String) this.listaProvincia.getSelectedItem();
            String localidad = (String) this.listaLocal.getSelectedItem();
            CONTROLADOR_V.altaCP(cp, localidad);
            reiniciarComponentes("pais");
            this.listaPais.setSelectedItem(pais);
            this.listaProvincia.setSelectedItem(provincia);
            this.listaLocal.setSelectedItem(localidad);
            this.listaCP.setSelectedItem(cp);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "El campo esta vacio", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarCPActionPerformed

    private void reiniciarComponentes(String opcion) {
        switch (opcion) {
            case "pais":
                this.listaProvincia.setEnabled(false);
                this.listaProvincia.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione una Provincia"}));
                this.btnAgregarProv.setEnabled(false);
                this.listaLocal.setEnabled(false);
                this.listaLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione una Localidad"}));
                this.btnAgregarLoc.setEnabled(false);
                this.listaCP.setEnabled(false);
                this.listaCP.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Seleccione un Codigo Postal"}));
                this.btnAgregarCP.setEnabled(false);
                this.txtCalle.setEnabled(false);
                this.txtCalle.setText("");
                this.txtNumCalle.setEnabled(false);
                this.txtNumCalle.setText("");
                this.txtPiso.setEnabled(false);
                this.txtPiso.setText("");
                this.txtDep.setEnabled(false);
                this.txtDep.setText("");
                break;
            case "provincia":
                this.listaLocal.setEnabled(false);
                this.btnAgregarLoc.setEnabled(false);
                this.listaCP.setEnabled(false);
                this.btnAgregarCP.setEnabled(false);
                this.txtCalle.setEnabled(false);
                this.txtCalle.setText("");
                this.txtNumCalle.setEnabled(false);
                this.txtNumCalle.setText("");
                this.txtPiso.setEnabled(false);
                this.txtPiso.setText("");
                this.txtDep.setEnabled(false);
                this.txtDep.setText("");
                break;
            case "localidad":
                this.listaCP.setEnabled(false);
                this.btnAgregarCP.setEnabled(false);
                this.txtCalle.setEnabled(false);
                this.txtCalle.setText("");
                this.txtNumCalle.setEnabled(false);
                this.txtNumCalle.setText("");
                this.txtPiso.setEnabled(false);
                this.txtPiso.setText("");
                this.txtDep.setEnabled(false);
                this.txtDep.setText("");
                break;
            case "cp":
                this.txtCalle.setEnabled(false);
                this.txtCalle.setText("");
                this.txtNumCalle.setEnabled(false);
                this.txtNumCalle.setText("");
                this.txtPiso.setEnabled(false);
                this.txtPiso.setText("");
                this.txtDep.setEnabled(false);
                this.txtDep.setText("");
                break;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCP;
    private javax.swing.JButton btnAgregarLoc;
    private javax.swing.JButton btnAgregarPais;
    private javax.swing.JButton btnAgregarProv;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel etCalle;
    private javax.swing.JLabel etDep;
    private javax.swing.JLabel etNum;
    private javax.swing.JLabel etPiso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox listaCP;
    private javax.swing.JComboBox listaLocal;
    private javax.swing.JComboBox listaPais;
    private javax.swing.JComboBox listaProvincia;
    private javax.swing.JComboBox listaRazonSocial;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCodArea;
    private javax.swing.JTextField txtDep;
    private javax.swing.JTextField txtNumCalle;
    private javax.swing.JTextField txtNumCuit;
    private javax.swing.JTextField txtNumTel;
    private javax.swing.JTextField txtPiso;
    private javax.swing.JTextField txtPosCuit;
    private javax.swing.JTextField txtPreCuit;
    private javax.swing.JTextField txtRazonSocial;
    // End of variables declaration//GEN-END:variables
}
